 import React, { useState } from "react";

function ToDoApp() {
  const [toDoList, setToDoList] = useState([]);
  const [newToDo, setNewToDo] = useState("");
  const [filter, setFilter] = useState("all");

  // Handle form input change
  const handleChange = (e) => {
    setNewToDo(e.target.value);
  };

  // Add new to-do
  const addToDo = (e) => {
    e.preventDefault();
    if (newToDo.trim()) {
      setToDoList([...toDoList, { text: newToDo, completed: false }]);
      setNewToDo("");
    }
  };

  // Toggle to-do completion
  const toggleComplete = (index) => {
    const updatedList = toDoList.map((item, i) => {
      if (i === index) {
        return { ...item, completed: !item.completed };
      }
      return item;
    });
    setToDoList(updatedList);
  };

  // Delete to-do
  const deleteToDo = (index) => {
    const updatedList = toDoList.filter((_, i) => i !== index);
    setToDoList(updatedList);
  };

  // Filter to-dos based on completion
  const filteredToDoList = toDoList.filter((item) => {
    if (filter === "completed") return item.completed;
    if (filter === "pending") return !item.completed;
    return true;
  });

  return (
    <div className="to-do-app">
      <h1>To-Do List</h1>

      {/* Form to add new to-do */}
      <form onSubmit={addToDo}>
        <input
          type="text"
          value={newToDo}
          onChange={handleChange}
          placeholder="Add a new task..."
        />
        <button type="submit">Add</button>
      </form>

      {/* Filter buttons */}
      <div>
        <button onClick={() => setFilter("all")}>All</button>
        <button onClick={() => setFilter("completed")}>Completed</button>
        <button onClick={() => setFilter("pending")}>Pending</button>
      </div>

      {/* To-do List */}
      <ul>
        {filteredToDoList.map((item, index) => (
          <li key={index}>
            <span
              onClick={() => toggleComplete(index)}
              style={{
                textDecoration: item.completed ? "line-through" : "none",
              }}
            >
              {item.text}
            </span>
            <button onClick={() => deleteToDo(index)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default ToDoApp;
